{"ast":null,"code":"import _toConsumableArray from \"/Users/macbookpro/Desktop/Redwood Course Material/starter 4/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/macbookpro/Desktop/Redwood Course Material/starter 4/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/macbookpro/Desktop/Redwood Course Material/starter 4/src/App.js\";\nimport React, { useState, Fragment } from 'react';\nimport AddUserForm from './forms/AddUserForm';\nimport UserTable from './tables/UserTable';\n/**\n * Goals:\n *\n * > Add Delete and Edit Button to each user item\n * > Send functions from 'App' in order to perform full CRUD\n *\n * Step 1: Implement Delete\n * Step 2: Implement Edit (EditUserForm is provided as a template. A good approach to this is to have user Edit buttons send a notification to App when they are clicked, so App can conditionally render either the Add or Edit form.)\n *\n */\n\nvar App = function App() {\n  // Data\n  var usersData = [{\n    id: 1,\n    name: 'Tania',\n    username: 'floppydiskette'\n  }, {\n    id: 2,\n    name: 'Craig',\n    username: 'siliconeidolon'\n  }, {\n    id: 3,\n    name: 'Ben',\n    username: 'benisphere'\n  }]; // Setting state\n\n  var _useState = useState(usersData),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1]; // CRUD operations\n\n\n  var addUser = function addUser(user) {\n    user.id = users.length + 1;\n    setUsers(_toConsumableArray(users).concat([user]));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"CRUD App with Hooks\"), React.createElement(\"div\", {\n    className: \"flex-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"flex-large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Add user\"), React.createElement(AddUserForm, {\n    addUser: addUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"flex-large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"View users\"), React.createElement(UserTable, {\n    users: users,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/macbookpro/Desktop/Redwood Course Material/starter 4/src/App.js"],"names":["React","useState","Fragment","AddUserForm","UserTable","App","usersData","id","name","username","users","setUsers","addUser","user","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AAEA;;;;;;;;;;;AAWA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AACjB;AACA,MAAMC,SAAS,GAAG,CACjB;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,OAAf;AAAwBC,IAAAA,QAAQ,EAAE;AAAlC,GADiB,EAEjB;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,OAAf;AAAwBC,IAAAA,QAAQ,EAAE;AAAlC,GAFiB,EAGjB;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE,KAAf;AAAsBC,IAAAA,QAAQ,EAAE;AAAhC,GAHiB,CAAlB,CAFiB,CAQjB;;AARiB,kBASSR,QAAQ,CAACK,SAAD,CATjB;AAAA;AAAA,MASVI,KATU;AAAA,MASHC,QATG,kBAWjB;;;AACA,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,IAAI,EAAI;AACvBA,IAAAA,IAAI,CAACN,EAAL,GAAUG,KAAK,CAACI,MAAN,GAAe,CAAzB;AACAH,IAAAA,QAAQ,oBAAKD,KAAL,UAAYG,IAAZ,GAAR;AACA,GAHD;;AAKA,SACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADD,EAEC;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,EAEC,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAED,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADD,CADD,EAOC;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,EAEC,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEF,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CAPD,CAFD,CADD;AAiBA,CAlCD;;AAoCA,eAAeL,GAAf","sourcesContent":["import React, { useState, Fragment } from 'react'\nimport AddUserForm from './forms/AddUserForm'\nimport UserTable from './tables/UserTable'\n\n/**\n * Goals:\n *\n * > Add Delete and Edit Button to each user item\n * > Send functions from 'App' in order to perform full CRUD\n *\n * Step 1: Implement Delete\n * Step 2: Implement Edit (EditUserForm is provided as a template. A good approach to this is to have user Edit buttons send a notification to App when they are clicked, so App can conditionally render either the Add or Edit form.)\n *\n */\n\nconst App = () => {\n\t// Data\n\tconst usersData = [\n\t\t{ id: 1, name: 'Tania', username: 'floppydiskette' },\n\t\t{ id: 2, name: 'Craig', username: 'siliconeidolon' },\n\t\t{ id: 3, name: 'Ben', username: 'benisphere' },\n\t]\n\n\t// Setting state\n\tconst [users, setUsers] = useState(usersData)\n\n\t// CRUD operations\n\tconst addUser = user => {\n\t\tuser.id = users.length + 1\n\t\tsetUsers([...users, user])\n\t}\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<h1>CRUD App with Hooks</h1>\n\t\t\t<div className=\"flex-row\">\n\t\t\t\t<div className=\"flex-large\">\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<h2>Add user</h2>\n\t\t\t\t\t\t<AddUserForm addUser={addUser} />\n\t\t\t\t\t</Fragment>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex-large\">\n\t\t\t\t\t<h2>View users</h2>\n\t\t\t\t\t<UserTable users={users}/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}